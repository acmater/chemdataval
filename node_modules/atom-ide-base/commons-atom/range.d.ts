import { TextEditor, TextBuffer, Range, Point } from "atom";
export declare function wordAtPosition(editor: TextEditor, position: Point, wordRegex?: RegExp | {
    includeNonWordCharacters: boolean;
}): {
    wordMatch: Array<string>;
    range: Range;
} | null;
export declare function trimRange(editor: TextEditor, rangeToTrim: Range, stopRegex?: RegExp): Range;
export declare function getWordFromMouseEvent(editor: TextEditor, event: MouseEvent): string | null;
export declare function getWordFromCursorOrSelection(editor: TextEditor): string | null;
export declare function wordAtPositionFromBuffer(buffer: TextBuffer, position: Point, wordRegex: RegExp): {
    wordMatch: Array<string>;
    range: Range;
} | null;
export declare function matchRegexEndingAt(buffer: TextBuffer, endPosition: Point, regex: RegExp): string | null;
export declare function isPositionInRange(position: Point, range: Range | Array<Range>): boolean;
